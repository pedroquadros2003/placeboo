#: set s dp(150) 

## Sintaxe no canvas é diferente, parece com a da classe

<CanvasExample1>:


## todo widget pode ter um canvas


    canvas: 

        Rectangle:

            pos: self.center_x -s/2, self.center_y - s

            size: s, 2*s


        Line:

            points: (0, 0, 100, 200)
            width: 3
       


<CanvasExample2>:


    canvas: 


        Line:

            points: (0, self.height/2, self.width, self.height/2)

            width: 3

        Line:

            points: (self.width/2, 0, self.width/2, self.height)

            width: 3




<CanvasExample3>:


    canvas: 
        Color: ## cor é instrução
            rgb: 1, 0, 1

        Line:

            circle: (200, 200, 100) # x, y, raio
            width: 3

        Line:

            ellipse: (20, 20, 50, 120) # x, y, a/2, b/2

            width: 3

        Color:
            rgba: 1, 0, 0, 1

        Line:
            rectangle: (800, 100, 40, 60) ## x, y, w, h

            width: 1



<CanvasExample4>:
    Button:
        text: "A"
        pos: 100, 400
        on_press: root.on_button_a_click()


<CanvasExample6>:
    BoxLayout
        size: root.size   ## BoxLayout é filho de um widget que ocupa toda a tela
        Widget:
            canvas:
                Color:
                    rgb: 0, 1, 0
                Rectangle:
                    size: self.size
        RelativeLayout:  
## canvas de todo widget tem origem no inferior esquerdo da tela,
## exceto quando usamos RelativeLayout

            canvas:
                Color:
                    rgb: 0, 0, 1
                Rectangle:
                    size: self.size

    